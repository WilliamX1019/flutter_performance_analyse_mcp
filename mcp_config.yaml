version: 1
agents:
  - name: PerfAgent
    description: 帧率采集与分析
    tools: [CollectTimeline, AnalyzeFPSPrecise]
    entry: agents/perf_agent.py

  - name: LeakAgent
    description: 内存泄漏采集与分析
    tools: [DumpHeap, AnalyzeLeaks]
    entry: agents/leak_agent.py

  - name: StartupAgent
    description: 应用启动耗时分析
    tools: [CollectStartupData, AnalyzeStartupTime]
    entry: agents/startup_agent.py

  - name: OptimizerAgent
    description: 整合报告并生成综合优化方案
    tools: [ConsolidateReports]
    entry: agents/optimizer_agent.py

  - name: PackageSizeAgent
    description: 分析应用包大小 (APK, AAB, IPA)
    tools: [AnalyzePackageSize]
    entry: agents/package_size_agent.py

workflow:
  - name: fps_workflow_impeller
    description: 独立帧率检测流程 (使用 Impeller 渲染后端)
    steps:
      - step: "收集帧率数据"
        agent: PerfAgent
        inputs:
          renderer: "impeller"
      - step: "分析帧率曲线"
        agent: PerfAgent
        inputs:
          timeline_file: "timeline.json"
      - step: "输出帧率优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/fps_report.md"
          fps_analysis: "{{steps[1].output.fps_analysis}}"
        output_file: "output/fps_report.md"

  - name: fps_workflow_skia
    description: 独立帧率检测流程 (使用 Skia 渲染后端)
    steps:
      - step: "收集帧率数据"
        agent: PerfAgent
        inputs:
          renderer: "skia"
      - step: "分析帧率曲线"
        agent: PerfAgent
        inputs:
          timeline_file: "timeline.json"
      - step: "输出帧率优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/fps_report.md"
          fps_analysis: "{{steps[1].output.fps_analysis}}"
        output_file: "output/fps_report.md"

  - name: leak_workflow
    description: 独立内存泄漏检测流程
    steps:
      - step: "导出 Heap Snapshot"
        agent: LeakAgent
      - step: "分析内存泄漏"
        agent: LeakAgent
        inputs:
          heap_snapshot_file: "heap.json"
      - step: "输出内存泄漏报告"
        agent: Gemini
        inputs:
          report_template: "templates/leak_report.md"
          leak_analysis: "{{steps[1].output.leak_analysis}}"

  - name: startup_workflow_impeller
    description: 独立启动耗时分析流程 (使用 Impeller 渲染后端)
    steps:
      - step: "收集启动数据"
        agent: StartupAgent
        inputs:
          renderer: "impeller"
      - step: "分析启动耗时"
        agent: StartupAgent
        inputs:
          timeline_file: "timeline.json"
      - step: "输出启动优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/startup_report.md"
          startup_analysis: "{{steps[1].output.startup_analysis}}"
        # 添加此行，确保启动报告被保存到文件
        output_file: "output/startup_report.md"

  - name: startup_workflow_skia
    description: 独立启动耗时分析流程 (使用 Skia 渲染后端)
    steps:
      - step: "收集启动数据"
        agent: StartupAgent
        inputs:
          renderer: "skia"
      - step: "分析启动耗时"
        agent: StartupAgent
        inputs:
          timeline_file: "timeline.json"
      - step: "输出启动优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/startup_report.md"
          startup_analysis: "{{steps[1].output.startup_analysis}}"
        output_file: "output/startup_report.md"
  # 分析应用包大小
  - name: package_size_apk_workflow
    description: 独立的应用包大小分析流程 (APK)
    steps:
      - step: "分析应用包大小"
        agent: PackageSizeAgent
        inputs:
          platform: "apk"
      - step: "输出包大小优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/apk_size_report.md"
          package_size_analysis: "{{steps[0].output.package_size_analysis}}"
        output_file: "output/apk_size_report.md"

  - name: package_size_aab_workflow
    description: 独立的应用包大小分析流程 (AAB)
    steps:
      - step: "分析应用包大小"
        agent: PackageSizeAgent
        inputs:
          platform: "aab"
      - step: "输出包大小优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/aab_size_report.md"
          package_size_analysis: "{{steps[0].output.package_size_analysis}}"
        output_file: "output/aab_size_report.md"

  - name: package_size_ipa_workflow
    description: 独立的应用包大小分析流程 (IPA)
    steps:
      - step: "分析应用包大小"
        agent: PackageSizeAgent
        inputs:
          platform: "ipa"
      - step: "输出包大小优化报告"
        agent: Gemini
        inputs:
          report_template: "templates/ipa_size_report.md"
          package_size_analysis: "{{steps[0].output.package_size_analysis}}"
        output_file: "output/ipa_size_report.md"
  # 综合优化工作流，收尾工作
  - name: optimization_workflow
    description: 基于所有分析报告生成综合优化方案
    steps:
      - step: "整合分析报告"
        agent: OptimizerAgent
      - step: "生成综合优化方案"
        agent: Gemini
        inputs:
          prompt_template: "templates/optimization_plan_prompt.md"
          report_context: "{{steps[0].output.consolidated_reports}}"
        # 将最终的综合方案保存到文件
        output_file: "output/comprehensive_optimization_plan.md"      